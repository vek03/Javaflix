package admin;

//imports necessarios
import conexao.Conexao;
import java.awt.Image;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import javax.swing.ImageIcon;

/**
 *
 * @author Victor e Mariane.
 * Mari Vek Histories
 */

public class frm_manage_film extends javax.swing.JFrame {

    //aqui declaramos a classe de conexão como con_cliente, para utilizá-la ao longo do código
    Conexao con_cliente;
    
    //declarando variaveis para passagem dos dados do admin entre as classes
    private int id;
    private String usuario;
    private String nome;
    
    /**
     * Creates new form frmTela
     */
    //método construtor que irá iniciar os componentes, conectar ao banco e trazer as informações
    //da tabela no primeiro registro
    public frm_manage_film(int realId, String realUser, String realNome) {
        initComponents(); //iniciando os componentes do JFrame
        initVariables(realId, realUser, realNome); //chamando metodo que inicia as variaveis do parametro
        con_cliente = new Conexao(); // inicialização do objeto
        con_cliente.conecta(); // chama o método que conecta
        //enviando instrução SQL construtora que tras todos os filmes do banco
        con_cliente.executaSQL("select * from filmes order by id");
        preencherTabela(); //chamando metodo que preenche a tabela com os registros dos filmes
        posicionarRegistro(); //chamando metodo que posiciona o resultset no primeiro registro
        tblClientes.setAutoCreateRowSorter(true);// ativa a classificação ordenada da tabela
        reload(); //chamando metodo que seta icone ao botão recarregar
        logo(); //chamando metodo que seta a logo do programa
        icone(); //chamando metodo que seta o icone do programa
    }
    
    //metodo que inicia as variaveis do admin do parametro
    private void initVariables(int realId, String realUser, String realNome){
        id = realId;
        usuario = realUser;
        nome = realNome;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Panel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        brnExcluir = new javax.swing.JButton();
        title = new javax.swing.JLabel();
        btnPrimeiroRegistro = new javax.swing.JButton();
        btnVoltarUmRegistro = new javax.swing.JButton();
        btnAvancarUmRegistro = new javax.swing.JButton();
        btnUltimoRegistro = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblClientes = new javax.swing.JTable();
        txtPesquisa = new javax.swing.JTextField();
        lblPesquisa = new javax.swing.JLabel();
        logo = new javax.swing.JLabel();
        lblId = new javax.swing.JLabel();
        txtCod = new javax.swing.JTextField();
        lblTitle = new javax.swing.JLabel();
        txtTitle = new javax.swing.JTextField();
        lblValor = new javax.swing.JLabel();
        txtValor = new javax.swing.JTextField();
        btnAlterar = new javax.swing.JButton();
        alert = new javax.swing.JLabel();
        btnReload = new javax.swing.JButton();
        aviso = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Javaflix(admin - Gerenciador de Filmes)");
        setBackground(new java.awt.Color(255, 102, 102));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(0, 51, 51));

        brnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/resultset/application_delete.png"))); // NOI18N
        brnExcluir.setToolTipText("Deletar(Desativado temporáriamente)");
        brnExcluir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        brnExcluir.setEnabled(false);
        brnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brnExcluirActionPerformed(evt);
            }
        });

        title.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        title.setForeground(new java.awt.Color(255, 255, 255));
        title.setText("Gerenciador de Filmes");

        btnPrimeiroRegistro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/resultset/resultset_first.png"))); // NOI18N
        btnPrimeiroRegistro.setToolTipText("Primeiro registro");
        btnPrimeiroRegistro.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPrimeiroRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrimeiroRegistroActionPerformed(evt);
            }
        });

        btnVoltarUmRegistro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/resultset/resultset_previous.png"))); // NOI18N
        btnVoltarUmRegistro.setToolTipText("Registro anterior");
        btnVoltarUmRegistro.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVoltarUmRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarUmRegistroActionPerformed(evt);
            }
        });

        btnAvancarUmRegistro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/resultset/resultset_next.png"))); // NOI18N
        btnAvancarUmRegistro.setToolTipText("Próximo registro");
        btnAvancarUmRegistro.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAvancarUmRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAvancarUmRegistroActionPerformed(evt);
            }
        });

        btnUltimoRegistro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/resultset/resultset_last.png"))); // NOI18N
        btnUltimoRegistro.setToolTipText("Úlitmo registro");
        btnUltimoRegistro.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUltimoRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUltimoRegistroActionPerformed(evt);
            }
        });

        btnExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/resultset/door_in.png"))); // NOI18N
        btnExit.setToolTipText("Retornar para o Modo de Seleção");
        btnExit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        tblClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID_Filme", "Título", "Gênero", "Duração", "Valor(R$)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblClientes.setToolTipText("Filmes");
        tblClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblClientesMouseClicked(evt);
            }
        });
        tblClientes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblClientesKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblClientes);

        txtPesquisa.setToolTipText("Pesquisar...");
        txtPesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisaKeyReleased(evt);
            }
        });

        lblPesquisa.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblPesquisa.setForeground(new java.awt.Color(255, 255, 255));
        lblPesquisa.setText("Pesquisa por nome do filme:");

        lblId.setForeground(new java.awt.Color(255, 255, 255));
        lblId.setText("ID_Filme:");

        txtCod.setEditable(false);
        txtCod.setText(" ");
        txtCod.setToolTipText("Código/Id");

        lblTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle.setText("Título:");

        txtTitle.setEditable(false);
        txtTitle.setToolTipText("Titulo do filme");

        lblValor.setForeground(new java.awt.Color(255, 255, 255));
        lblValor.setText("Valor:");

        txtValor.setToolTipText("Insira o valor da locação");

        btnAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/resultset/application_edit.png"))); // NOI18N
        btnAlterar.setToolTipText("Alterar");
        btnAlterar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        alert.setForeground(new java.awt.Color(255, 0, 0));

        btnReload.setToolTipText("Recarregar tabela");
        btnReload.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnReload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReloadActionPerformed(evt);
            }
        });

        aviso.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        aviso.setForeground(new java.awt.Color(255, 0, 0));
        aviso.setText("Só é possível alterar o valor dos filmes");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(logo, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72)
                .addComponent(title)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTitle)
                    .addComponent(lblValor)
                    .addComponent(lblId))
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)
                    .addComponent(txtValor)
                    .addComponent(txtCod, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(alert, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(81, 81, 81))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnPrimeiroRegistro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnVoltarUmRegistro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAvancarUmRegistro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUltimoRegistro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAlterar)
                        .addGap(18, 18, 18)
                        .addComponent(brnExcluir)
                        .addGap(18, 18, 18)
                        .addComponent(btnReload)
                        .addGap(61, 61, 61)
                        .addComponent(btnExit))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblPesquisa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 605, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(203, 203, 203)
                .addComponent(aviso)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(logo, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(title))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(aviso)
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblId)
                    .addComponent(txtCod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTitle))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(alert, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblValor)
                            .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btnAlterar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(brnExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnReload, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnExit)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnPrimeiroRegistro)
                        .addComponent(btnVoltarUmRegistro)
                        .addComponent(btnAvancarUmRegistro)
                        .addComponent(btnUltimoRegistro)))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPesquisa)
                    .addComponent(txtPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout PanelLayout = new javax.swing.GroupLayout(Panel);
        Panel.setLayout(PanelLayout);
        PanelLayout.setHorizontalGroup(
            PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        PanelLayout.setVerticalGroup(
            PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtPesquisaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisaKeyReleased
        //toda vez que um caracter novo for inserido na barra de pesquisa, ela
        //irá atualizar a busca para o item mais próximo ou identico na tabela
        //SELECT

        //buscando um registro com os caracteres selecionados pelo nome
        try {
            String pesquisa = "select * from filmes where titulo like '" + txtPesquisa.getText() + "%'";
            con_cliente.executaSQL(pesquisa);

            if(con_cliente.resultset.first()){
                preencherTabela();
                posicionarRegistro();
            }
            else{
                JOptionPane.showMessageDialog(null, "\n Não existe dados com este parâmetro!!", "Mensagem do Programa",JOptionPane.INFORMATION_MESSAGE);
            }
        }catch (SQLException errosql){
            JOptionPane.showMessageDialog(null, "\n Os dados digitados não foram localizados!! :\n ", "Mensagem do Programa",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_txtPesquisaKeyReleased

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        //botão que irá retornar ao modo de seleção
        frm_selection_mode mostra = new frm_selection_mode(id, usuario, nome);
        mostra.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnUltimoRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUltimoRegistroActionPerformed
        // este botão irá selecionar o último registro da tabela presente no banco
        //SELECT

        try {
            con_cliente.executaSQL("select * from filmes order by id");
            con_cliente.resultset.last();
            mostrar_Dados();
        }catch(SQLException erro){
            JOptionPane.showMessageDialog(null, "Não foi possível posicionar no último registro: ");
        }
    }//GEN-LAST:event_btnUltimoRegistroActionPerformed

    private void btnAvancarUmRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAvancarUmRegistroActionPerformed
        //este botão irá selecionar o registro seguinte em relação ao selecionado
        //contém tratamento para que ele não tente selecionar um registro inexistente após o último
        //SELECT

        try {
            //se o registro selecionado não for o último, ele irá passar para o próximo registro
            //senão, ele irá para o último registro
            if(con_cliente.resultset.isLast() == false){
                con_cliente.resultset.next(); 
            }else{
                con_cliente.executaSQL("select * from filmes order by id");
                con_cliente.resultset.last();
            }
            mostrar_Dados();
        }catch(SQLException erro){
            JOptionPane.showMessageDialog(null, "Não foi possível posicionar no próximo registro: ");
        }
    }//GEN-LAST:event_btnAvancarUmRegistroActionPerformed

    private void btnVoltarUmRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarUmRegistroActionPerformed
        //este botão irá selecionar o registro anterior em relação ao atual
        //contém tratamento para que ele não busque um registro inexistente ao tentar voltar...
        //um registro partindo do primeiro
        //SELECT

        try {
            //se o registro selecionado não for o primeiro, ele irá voltar para o registro anterior
            //senão, ele irá para o primeiro registro
            if(con_cliente.resultset.isFirst() == false){
                con_cliente.resultset.previous();
            }else{
                con_cliente.executaSQL("select * from filmes order by id");
                con_cliente.resultset.first();
            }
            mostrar_Dados();
        }catch(SQLException erro){
            JOptionPane.showMessageDialog(null, "Não foi possível posicionar no registro anterior: ");
        }
    }//GEN-LAST:event_btnVoltarUmRegistroActionPerformed

    private void btnPrimeiroRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrimeiroRegistroActionPerformed
        //este botão irá selecionar o primeiro registro da tabela presente no banco
        //SELECT

        try {
            con_cliente.executaSQL("select * from filmes order by id");
            con_cliente.resultset.first();
            mostrar_Dados();
        }catch(SQLException erro){
            JOptionPane.showMessageDialog(null, "Não foi possível acessar o primeiro registro: ");
        }
    }//GEN-LAST:event_btnPrimeiroRegistroActionPerformed

    private void brnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brnExcluirActionPerformed
        //este botão irá excluir o registro selecionado pelo usuário
        //DELETE

        //atribuindo variavel de comunicação com o banco
        String sql="";

        //pedindo confirmação da exclusão
        try {
            int resposta = JOptionPane.showConfirmDialog(rootPane, "Deseja excluir o registro: ","Confirmar Exclusão", JOptionPane.YES_NO_OPTION, 3);
            if (resposta == 0){
                //deletando registro
                sql = "delete from filmes where id = " + txtCod.getText();
                int excluir = con_cliente.statement.executeUpdate(sql);

                //restartando instrução construtora e confirmando sucesso
                if (excluir == 1){
                    JOptionPane.showMessageDialog(null, "Exclusão realizada com sucesso!!","Mensagem do Programa",JOptionPane.INFORMATION_MESSAGE);
                    con_cliente.executaSQL("select * from filmes order by id");
                    con_cliente.resultset.first();
                    preencherTabela();
                    posicionarRegistro();
                }
                else{
                    JOptionPane.showMessageDialog(null, "Operação cancelada pelo usuário!!","Mensagem do Programa", JOptionPane.INFORMATION_MESSAGE);
                }
            }

        }catch(SQLException excecao){
            JOptionPane.showMessageDialog(null, "\n Erro na exclusão :\n\nEste filme não pode ser deletado enquanto houver alocações dele", "Mensagem do Programa", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_brnExcluirActionPerformed

    //metodo que atualiza algum registro da tabela
    private void update(){
        //adicionando os valores dos campos as variaveis
        String valor = txtValor.getText();

        //criando variavel de interação com o banco e a de mensagem de aviso
        String sql = "";
        String msg = "";

        //atualizando o valor de um filme
        try {
            sql="update filmes set valor='" + valor + "' where id = " + txtCod.getText();
            msg="Alteração de registro";
            
            con_cliente.statement.executeUpdate(sql);
            JOptionPane.showMessageDialog(null, msg + " realizada com sucesso!!", "Mensagem do Programa", JOptionPane.INFORMATION_MESSAGE);

        }catch(SQLException errosql){
                JOptionPane.showMessageDialog(null, "\n Erro na alteração! :\n ", "Mensagem do Programa", JOptionPane.INFORMATION_MESSAGE);
        }
    }
    
    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        //este botão irá alterar um ou mais campos de um registro já existente selecionado pelo usuário
        //UPDATE

        //verificando se o campo foi preenchido
        if(txtValor.getText().length() > 0){
            
            try{
                //verificando se o valor contém apenas númeors
                long teste;
                teste =  Long.parseLong(txtValor.getText());

                update();
                alert.setText(null);
                con_cliente.executaSQL("select * from filmes order by id");
                con_cliente.resultset.first();
                preencherTabela();
                posicionarRegistro();
                mostrar_Dados();

            }catch(SQLException e){
                JOptionPane.showMessageDialog(null, "Não foi possível atualizar o registro!\n\nTente novamente mais tarde!" ,"Informação",JOptionPane.INFORMATION_MESSAGE);
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, "O Valor Total da locação só pode conter números!" ,"Informação",JOptionPane.INFORMATION_MESSAGE);
            }

        }else{
            alert.setText("Preencha o campo!");
        }
    }//GEN-LAST:event_btnAlterarActionPerformed

    private void tblClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblClientesMouseClicked
        //ao clicar em um registro da tabela, o programa irá trazer as informações do registro...
        //SELECT
        
        //vendo qual registro foi selecionado
        int linha_selecionada = tblClientes.getSelectedRow();
        int id_selecionado = Integer.parseInt(tblClientes.getValueAt(linha_selecionada, 0).toString());

        con_cliente.executaSQL("select * from filmes where id = '" + id_selecionado + "%'");
        posicionarRegistro();   
    }//GEN-LAST:event_tblClientesMouseClicked

    private void tblClientesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblClientesKeyPressed
        //ao clicar em um registro da tabela, o programa irá trazer as informações do registro...
        //SELECT
        
        //vendo qual registro foi selecionado
        int linha_selecionada = tblClientes.getSelectedRow();
        int id_selecionado = Integer.parseInt(tblClientes.getValueAt(linha_selecionada, 0).toString());

        con_cliente.executaSQL("select * from filmes where id = '" + id_selecionado + "%'");
        posicionarRegistro();   
    }//GEN-LAST:event_tblClientesKeyPressed

    private void btnReloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReloadActionPerformed
        //botão que irá recarregar a tabela
        
        con_cliente.executaSQL("select * from filmes order by id");
        preencherTabela();
        posicionarRegistro();
        alert.setText(null);
    }//GEN-LAST:event_btnReloadActionPerformed

    //metodo que seta o logo do programa
    private void logo(){
        //método que traz a imagem na raiz do projeto
        //método getClass e getResourse são para puxar a imagem no arquivo .jar 
        ImageIcon imageIcon = new ImageIcon(getClass().getResource("/icones/javaflix.png"));
        //método que redimensiona a imagem
        Image scaleImage = imageIcon.getImage().getScaledInstance(100, 50,Image.SCALE_DEFAULT);
        //método que traz a imagem dimensionada
        ImageIcon img = new ImageIcon(scaleImage);
        
        logo.setIcon(img);
    }
    
    //metodo que seta o icone do botão de recarregar
    private void reload(){
        //método que traz a imagem na raiz do projeto
        //método getClass e getResourse são para puxar a imagem no arquivo .jar 
        ImageIcon imageIcon = new ImageIcon(getClass().getResource("/icones/resultset/reload.png"));
        //método que redimensiona a imagem
        Image scaleImage = imageIcon.getImage().getScaledInstance(17, 17,Image.SCALE_DEFAULT);
        //método que traz a imagem dimensionada
        ImageIcon img = new ImageIcon(scaleImage);
        
        btnReload.setIcon(img);
    }
    
    //metodo que seta o icone do programa
    private void icone(){
        //método que traz a imagem na raiz do projeto
        //método getClass e getResourse são para puxar a imagem no arquivo .jar 
        ImageIcon imageIcon = new ImageIcon(getClass().getResource("/icones/icon.png"));
        //método que redimensiona a imagem
        Image scaleImage = imageIcon.getImage().getScaledInstance(25, 25,Image.SCALE_DEFAULT);
        //método que traz a imagem dimensionada
        ImageIcon img = new ImageIcon(scaleImage);
        
        this.setIconImage(img.getImage());
    }
        
    
    //método que irá preencher a tabela com os registros presentes no banco
    private void preencherTabela(){
        tblClientes.getColumnModel().getColumn(0).setPreferredWidth(4);
        tblClientes.getColumnModel().getColumn(1).setPreferredWidth(120);
        tblClientes.getColumnModel().getColumn(2).setPreferredWidth(30);
        tblClientes.getColumnModel().getColumn(3).setPreferredWidth(30);
        tblClientes.getColumnModel().getColumn(4).setPreferredWidth(30);
        
        DefaultTableModel modelo = (DefaultTableModel) tblClientes.getModel();
        modelo.setNumRows(0);
        
        try {
            con_cliente.resultset.beforeFirst();
            while(con_cliente.resultset.next()){
                modelo.addRow(new Object[]{
                    con_cliente.resultset.getString("id"),con_cliente.resultset.getString("titulo"),con_cliente.resultset.getString("genero"),con_cliente.resultset.getString("duracao"), con_cliente.resultset.getString("valor")

                });
            }
        }catch(SQLException erro){
            JOptionPane.showMessageDialog(null,"\n Erro ao listar dados da tabela!! :\n ","Mensagem do Programa",JOptionPane.INFORMATION_MESSAGE);
        }
    }
    
    //método que irá posicionar o resultset no primeiro registro
    private void posicionarRegistro(){
        try {
            con_cliente.resultset.first();
            mostrar_Dados();
        }catch(SQLException erro){
            JOptionPane.showMessageDialog(null,"Não foi possível posicionar no primeiro registro:","Mensagem do Programa",JOptionPane.INFORMATION_MESSAGE);
        }
    }
    
    //método que irá mostrar os dados do registro selecionado nos campos
    private void mostrar_Dados(){
        try {
            txtCod.setText(con_cliente.resultset.getString("id"));
            txtTitle.setText(con_cliente.resultset.getString("titulo"));
            txtValor.setText(con_cliente.resultset.getString("valor"));
        }catch(SQLException erro){
            JOptionPane.showMessageDialog(null,"Não localizou dados: ","Mensagem do Programa",JOptionPane.INFORMATION_MESSAGE);
        }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Panel;
    private javax.swing.JLabel alert;
    private javax.swing.JLabel aviso;
    private javax.swing.JButton brnExcluir;
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnAvancarUmRegistro;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnPrimeiroRegistro;
    private javax.swing.JButton btnReload;
    private javax.swing.JButton btnUltimoRegistro;
    private javax.swing.JButton btnVoltarUmRegistro;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblPesquisa;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblValor;
    private javax.swing.JLabel logo;
    private javax.swing.JTable tblClientes;
    private javax.swing.JLabel title;
    private javax.swing.JTextField txtCod;
    private javax.swing.JTextField txtPesquisa;
    private javax.swing.JTextField txtTitle;
    private javax.swing.JTextField txtValor;
    // End of variables declaration//GEN-END:variables
}
